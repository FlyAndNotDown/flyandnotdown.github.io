<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Backend on Kindem的博客</title><link>https://www.kindem.xyz/tags/backend/</link><description>Recent content in Backend on Kindem的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 04 May 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.kindem.xyz/tags/backend/index.xml" rel="self" type="application/rss+xml"/><item><title>Django 中图片的上传及显示</title><link>https://www.kindem.xyz/post/6/</link><pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate><guid>https://www.kindem.xyz/post/6/</guid><description>在 Django 中，上传文件不同于普通服务器的上传方法，在普通服务器中只需要使用一个 Controller 来控制文件的上传即可完成，但是在 Django 中，则需要额外使用数据库资源来存储文件。本文将说明如何使用 Django 接收、保存并且返回图片。
☕ 准备 首先，你需要为你的 Python 安装 pillow，pillow 是一个 Python 图像库，Django 的图片方面的功能使用到了它，所以我们需要事先安装：
pip install pillow 安装完成之后我们需要在 Django 的 settings.py 中更改一些设置：
# settings.py # 在末尾添加 MEDIA_ROOT = os.path.join(BASE_DIR, &amp;#39;media&amp;#39;).replace(&amp;#39;\\&amp;#39;, &amp;#39;/&amp;#39;) MEDIA_URL = &amp;#39;/media/&amp;#39; 🎫 Model 之前说到了 Django 的图片需要使用额外的数据库资源来存储文件，这样的设定并不是把图片数据本身存在数据库，而是 Django 将会自动将文件上传到你设置的位置，并且把上传之后的图片 path 存入数据库，这样你只需要访问数据库中的 path 即可访问到图片。
在你的应用目录下的 models.py 里新建一个图片 Model
from django.db import models class Image(models.Model): # 图片 img = models.ImageField(upload_to=&amp;#39;img&amp;#39;) # 创建时间 time = models.DateTimeField(auto_now_add=True) 这样做之后，一旦数据库对象被创建，img 表列接受的图片对象将会自动被上传到 /media/img 文件夹中，在上传完成之后，img 将会保存图片的 path。</description></item></channel></rss>