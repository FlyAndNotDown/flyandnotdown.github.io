<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Kindem的博客</title><link>https://www.kindem.xyz/tags/c++/</link><description>Recent content in C++ on Kindem的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 06 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.kindem.xyz/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ 模板黑魔法 —— 编译期序列与 std::tuple 遍历</title><link>https://www.kindem.xyz/post/45/</link><pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.kindem.xyz/post/45/</guid><description>编译期序列 最近看到一个很有意思的模板写法：
template &amp;lt;size_t... S&amp;gt; struct IndexSequence {}; template &amp;lt;size_t N, size_t... S&amp;gt; struct IndexSequenceMaker : public IndexSequenceMaker&amp;lt;N - 1, N - 1, S...&amp;gt; {}; template &amp;lt;size_t... S&amp;gt; struct IndexSequenceMaker&amp;lt;0, S...&amp;gt; { using Type = IndexSequence&amp;lt;S...&amp;gt;; }; template &amp;lt;size_t N&amp;gt; using MakeIndexSequence = typename IndexSequenceMaker&amp;lt;N&amp;gt;::Type; 乍一看啥玩意儿，仔细看会发现它的作用是生成一个编译期序列，如：
// IndexSequence&amp;lt;0, 1, 2, 3, 4&amp;gt; MakeIndexSequence&amp;lt;5&amp;gt; 它的实现非常巧妙，我们以上面这个例子为切入点，按照它的思路去展开模板：
template &amp;lt;&amp;gt; struct IndexSequenceMaker&amp;lt;0, 0, 1, 2, 3, 4&amp;gt; { using Type = IndexSequence&amp;lt;0, 1, 2, 3, 4&amp;gt;; } template &amp;lt;&amp;gt; struct IndexSequenceMaker&amp;lt;1, 1, 2, 3, 4&amp;gt; : public IndexSequenceMaker&amp;lt;0, 0, 1, 2, 3, 4&amp;gt; {} template &amp;lt;&amp;gt; struct IndexSequenceMaker&amp;lt;2, 2, 3, 4&amp;gt; : public IndexSequenceMaker&amp;lt;1, 1, 2, 3, 4&amp;gt;; template &amp;lt;&amp;gt; struct IndexSequenceMaker&amp;lt;3, 3, 4&amp;gt; : public IndexSequenceMaker&amp;lt;2, 2, 3, 4&amp;gt;; template &amp;lt;&amp;gt; struct IndexSequenceMaker&amp;lt;4, 4&amp;gt; : public IndexSequenceMaker&amp;lt;3, 3, 4&amp;gt;; template &amp;lt;&amp;gt; struct IndexSequenceMaker&amp;lt;5&amp;gt; : public IndexSequenceMaker&amp;lt;4, 4&amp;gt; {} template &amp;lt;&amp;gt; using MakeIndexSequence&amp;lt;5&amp;gt; = typename IndexSequenceMaker&amp;lt;5&amp;gt;::Type; 秒懂了，利用继承关系来传递不断生成的序列可变参，最后以 N = 0 的特化来终止生成。</description></item></channel></rss>